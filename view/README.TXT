
### Admin-Mod Login Handler
- **admin_login_controller.php:** Controller handling the logic for admin and moderator login.
- **admin_login_model.php:** Model responsible for managing user authentication and authorization.
- **admin_login_view.php:** View for the admin and moderator login interface.

### Options in Dashboard
#### Home
- **dash.php:** View representing the main dashboard.

#### Info Update
- **AdminProfileController.php:** Controller handling admin profile update logic.
- **AdminProfileModel.php:** Model managing admin profile data.
- **AdminProfileView.php:** View for updating admin profiles.

#### Ticket
- **PublishTicketController.php:** Controller for publishing new tickets.
- **PublishTicketModel.php:** Model managing the data for publishing tickets.
- **PublishTicketView.php:** View for the ticket publishing interface.

- **TicketController.php:** Controller for general ticket management.
- **TicketModel.php:** Model managing ticket-related data.
- **TicketView.php:** View for ticket management.

- **TicketSalesController.php:** Controller for handling ticket sales.
- **TicketSalesModel.php:** Model managing ticket sales data.
- **TicketSalesView.php:** View for displaying ticket sales.

- **TicketAuditController.php:** Controller for auditing ticket-related activities.
- **TicketAuditModel.php:** Model managing ticket audit data.
- **TicketAuditView.php:** View for displaying ticket audit information.

#### Event
- **EventsPostController.php:** Controller for posting new events.
- **EventsPostModel.php:** Model managing event posting data.
- **EventsPostView.php:** View for the event posting interface.

- **EventsArchiveController.php:** Controller for viewing event history.
- **EventsArchiveModel.php:** Model managing archived event data.
- **EventsArchiveView.php:** View for displaying event history.

- **EventUpdaterController.php:** Controller for editing event details.
- **EventUpdaterModel.php:** Model managing event update data.
- **EventUpdaterView.php:** View for the event editing interface.

#### Venue
- **PublishVenueController.php:** Controller for publishing new venues.
- **PublishVenueModel.php:** Model managing venue publishing data.
- **PublishVenueView.php:** View for the venue publishing interface.

- **VenueController.php:** Controller for general venue management.
- **VenueModel.php:** Model managing venue-related data.
- **VenueView.php:** View for venue management.

- **AdminBookingHistoryController.php:** Controller for viewing venue booking history.
- **AdminBookingHistoryModel.php:** Model managing venue booking history data.
- **AdminBookingHistoryView.php:** View for displaying venue booking history.

#### Moderator
- **ModeratorRegistrationController.php:** Controller for registering new moderators.
- **ModeratorRegistrationModel.php:** Model managing moderator registration data.
- **ModeratorRegistrationView.php:** View for the moderator registration interface.

- **ModeratorListController.php:** Controller for managing the list of moderators.
- **ModeratorListModel.php:** Model managing moderator-related data.
- **ModeratorListView.php:** View for displaying the list of moderators.

#### Moderation
- **PostControllerM.php:** Controller for post moderation.
- **PostModelM.php:** Model managing post moderation data.
- **PostViewM.php:** View for displaying post moderation interface.

- **PostControllerH.php:** Controller for viewing post moderation history.
- **PostModelH.php:** Model managing post moderation history data.
- **PostViewH.php:** View for displaying post moderation history.

- **commentActionControllerM.php:** Controller for moderating comments.
- **commentActionModelM.php:** Model managing comment moderation data.
- **commentViewM.php:** View for displaying comment moderation interface.

- **commentControllerH.php:** Controller for viewing comment moderation history.
- **commentModelH.php:** Model managing comment moderation history data.
- **commentViewH.php:** View for displaying comment moderation history.

#### Feedback
- **QueryController.php:** Controller for handling queries.
- **QueryModel.php:** Model managing query data.
- **QueryView.php:** View for displaying query-related information.

- **QuotationController.php:** Controller for handling quotation feedback.
- **QuotationModel.php:** Model managing quotation feedback data.
- **QuotationView.php:** View for displaying quotation feedback.

- **complaintFeedbackController.php:** Controller for handling complaint feedback.
- **complaintFeedbackModel.php:** Model managing complaint feedback data.
- **complaintFeedbackView.php:** View for displaying complaint feedback.

#### Add to Gallery
- **GalleryController.php:** Controller for managing gallery content.
- **GalleryModel.php:** Model managing gallery data.
- **Upload.php:** View for uploading content to the gallery.

#### User
- **AdminUserController.php:** Controller for managing users.
- **AdminUserModel.php:** Model managing user data.
- **AdminUserView.php:** View for displaying user information.

This structured approach to organizing controllers, models, and views provides a clear separation of concerns and facilitates maintainability in a larger web application.